name: App pull request

on:
  pull_request:
    paths:
      - "app/**"
      - ".github/workflows/app-pull-request.yml"

defaults:
  run:
    shell: bash
    working-directory: ./app

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  app-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Audit DNS requests
        uses: cds-snc/dns-proxy-action@main
        env:
          DNS_PROXY_FORWARDTOSENTINEL: "true"
          DNS_PROXY_LOGANALYTICSWORKSPACEID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          DNS_PROXY_LOGANALYTICSSHAREDKEY: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: '1.24.0'

      - name: Install dependencies
        run: go mod download

      - name: Format check
        run: |
          unformatted=$(gofmt -l .)
          if [ -n "$unformatted" ]; then
            echo "The following files are not formatted properly:"
            echo "$unformatted"
            exit 1
          else
            echo "All Go files are properly formatted"
          fi

      - name: Lint check
        uses: golangci/golangci-lint-action@2226d7cb06a077cd73e56eedd38eecad18e5d837 # v6.5.0
        with:
          version: v1.64
          working-directory: ./app

      - name: Test
        run: go test ./...

      - name: Docker build
        run: docker build --tag cds-superset-docs --platform linux/arm64 .
